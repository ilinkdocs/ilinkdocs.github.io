"use strict";(self.webpackChunkilink=self.webpackChunkilink||[]).push([[563],{528:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"integrations/webhooks/types","title":"Types of Webhooks","description":"This section details the types of webhooks available from ilink. You should request the configuration of the webhooks you wish to implement by contacting our support team (apoio@acin.pt).","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/integrations/webhooks/types.md","sourceDirName":"integrations/webhooks","slug":"/integrations/webhooks/types","permalink":"/en/docs/integrations/webhooks/types","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ilinkSidebar","previous":{"title":"Security Considerations","permalink":"/en/docs/integrations/webhooks/security"},"next":{"title":"Introduction","permalink":"/en/docs/integrations/as2/intro"}}');var i=n(4848),s=n(8453);const a={},c="Types of Webhooks",h={},r=[{value:"New Document Webhook",id:"new-document-webhook",level:2},{value:"Document Status Change Webhook",id:"document-status-change-webhook",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"types-of-webhooks",children:"Types of Webhooks"})}),"\n",(0,i.jsxs)(t.p,{children:["This section details the types of webhooks available from ilink. You should request the configuration of the webhooks you wish to implement by contacting our support team (",(0,i.jsx)(t.a,{href:"mailto:apoio@acin.pt",children:"apoio@acin.pt"}),")."]}),"\n",(0,i.jsx)(t.h2,{id:"new-document-webhook",children:"New Document Webhook"}),"\n",(0,i.jsx)(t.p,{children:"The new document webhook is an alternative to frequent polling of documents by the receiving entity. Each time a new document is sent to this entity, its new document callback will be invoked."}),"\n",(0,i.jsxs)(t.p,{children:["The implemented endpoint should expect the data defined in this ",(0,i.jsx)(t.a,{href:"https://ilink.acin.pt/swagger-ui/dist/index.html#/Webhooks/documentReceivedWebhook",children:"specification"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"document-status-change-webhook",children:"Document Status Change Webhook"}),"\n",(0,i.jsx)(t.p,{children:"The document status change webhook is an alternative to frequent polling of the status of each issued document by the sending entity. Each time the recipient of a sent document accepts, rejects, or receives a document, this status change callback will be invoked for the sending entity with the current data."}),"\n",(0,i.jsxs)(t.p,{children:["The implemented endpoint should expect the data defined in this ",(0,i.jsx)(t.a,{href:"https://ilink.acin.pt/swagger-ui/dist/index.html#/Webhooks/webhookDocumentState",children:"specification"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var o=n(6540);const i={},s=o.createContext(i);function a(e){const t=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);