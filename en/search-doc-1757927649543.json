{"searchDocs":[{"title":"Moloni Integration","type":0,"sectionRef":"#","url":"/en/docs/guides/moloni","content":"","keywords":"","version":"Next"},{"title":"Moloni Configuration​","type":1,"pageTitle":"Moloni Integration","url":"/en/docs/guides/moloni#moloni-configuration","content":" After logging into Moloni, go to Settings &gt; Developers &gt; Config API  Here you need to:  Enable the APIEnter the response callback URL (https://ilink.acin.pt)    You should also take note of the following values that are automatically generated:  developer IDclient secret  ","version":"Next","tagName":"h2"},{"title":"Ilink configuration​","type":1,"pageTitle":"Moloni Integration","url":"/en/docs/guides/moloni#ilink-configuration","content":" After saving the changes on Moloni's side, log in to ilink and go to Integrations &gt; Reception:  The developer ID obtained from Moloni is entered into the customer identifier in ilinkThe client secret obtained from Moloni is entered into the client key in ilinkThe username and password are the access details for Moloni's entity.  Note: Both entities (in Moloni and ilink) must have the same TIN for the integration to be correctly created.  After enabling this setting, ilink will automatically synchronise all documents issued in Moloni, and these will appear in Integrations &gt; Moloni:    We must select the documents to import, which will be stored in Issued &gt; To be sent   ","version":"Next","tagName":"h2"},{"title":"Medidata Integration","type":0,"sectionRef":"#","url":"/en/docs/guides/medidata","content":"","keywords":"","version":"Next"},{"title":"Operation​","type":1,"pageTitle":"Medidata Integration","url":"/en/docs/guides/medidata#operation","content":" Ilink has the ability to integrate invoices with Medidata suite programmes, both inbound (receipt of documents in the Sigma application) and outbound (sending documents from the water application).  For this process to work, the following requirements must be met on the customer's side:  ","version":"Next","tagName":"h2"},{"title":"Inbound (sending documents from ilink to Medidata software)​","type":1,"pageTitle":"Medidata Integration","url":"/en/docs/guides/medidata#inbound-sending-documents-from-ilink-to-medidata-software","content":" The customer must provide an SFTP server with write permissions that is accessible publicly or to ilink IPs with NAT rules:  62.28.56.161, 62.28.56.162 (ilink testing)193.43.40.153 (ilink production)Optionally, previous IP ranges may be authorised.  Note: Only the SFTP protocol is supported. FTP connections, even with TLS/SSL encryption, are not accepted.  This server must also be accessible to Medidata software (usually by mapping a network folder). The goal is to enable ilink to create files on this server and for them to be readable by Medidata software through the INBOUND folder.  After creating it, you must send us the following data to be configured in ilink:  server address/IPportuserpassword  ","version":"Next","tagName":"h2"},{"title":"Outbound (sending documents from Medidata software to ilink)​","type":1,"pageTitle":"Medidata Integration","url":"/en/docs/guides/medidata#outbound-sending-documents-from-medidata-software-to-ilink","content":" It is necessary to configure the water application module to generate XML files on an SFTP server SFTP server, which should send the accesses to ilink. This SFTP server can also be configured as a network folder, so that the water application saves the XML files in that folder, and they are immediately available on the SFTP server. It is not necessary to make the PDF files available in the outbound folder.  You also need public read and write permissions or permissions for our IPs with NAT rules:  62.28.56.161 (ilink testing)193.43.40.153 (ilink production)Optionally, the previous IP ranges can be authorised.  Note: Only the SFTP protocol is supported. FTP connections, even with TLS/SSL encryption, are not accepted.  After creating it, you must send us the following data to be configured in ilink:  server address/IPportuserpassword  ","version":"Next","tagName":"h2"},{"title":"Medidata folder structure​","type":1,"pageTitle":"Medidata Integration","url":"/en/docs/guides/medidata#medidata-folder-structure","content":" As a rule, Medidata servers should have the following folder structure prepared for issuing and receiving documents:  / ├── IN # ilink places invoices receivable by Medidata here ├── OUT # Medidata places the statuses of received and processed documents here ├── OUTBOUND │ ├── REGISTERED │ ├── COPIES │ ├── DOCUMENTS # Medidata places the files to be sent to ilink here | | | (IMPORTANT: DO NOT separate into subfolders by tax identification number) │ │ ├── ERRORS # Ilink places files with errors here: consult integration log │ │ └── FAILED # Ilink places files that it was unable to process here │ └── RESPONSES │ └── DOCUMENTS │ └── FicheiroEstados.txt # Ilink communicates the references of invoices created and sent here ├── READED └── RESPONSES   ","version":"Next","tagName":"h2"},{"title":"Consultation of documents and integration logs​","type":1,"pageTitle":"Medidata Integration","url":"/en/docs/guides/medidata#consultation-of-documents-and-integration-logs","content":" You can view documents issued and received on ilink by accessing the portal, in theIssued Documents and Received Documents áreas.  To view documents communicated via integration with Medidata (error analysis, confirmation of receipt, etc.), you can access the Integrations &gt; Integration Logs area and check for any errors that occurred in the communication of documents.  Note: It is possible to configure the sending of a report via email after sending documents issued by Medidata. This way, it is possible to confirm which documents were sent successfully, as well as possible integration and sending errors. ","version":"Next","tagName":"h2"},{"title":"List of Integrations","type":0,"sectionRef":"#","url":"/en/docs/guides/main","content":"","keywords":"","version":"Next"},{"title":"ERPs/Invoicing systems​","type":1,"pageTitle":"List of Integrations","url":"/en/docs/guides/main#erpsinvoicing-systems","content":" iGESTb-OnlineMoloniXISConnectPrimavera (requires ILINK plugin)SAGE X3 F5IT PHC WinSigAntúrioNovos canaisNorma6BetaSystemsPHCResolveNSOFTMicrolopesSeguinf SAP Lead4B Microsoft Dynamics NAV ArquiconsultSquadMicrosoft Business Central (cpcIT4all) WorkInNetAltmaia FaturaçãoMicroDigitalSIAGFacturamaXDArtsoftKeyInvoiceTripointEdiprinterSigPorForenseSendysR2 InformáticaDigiSoftProtótipoQuidgestOriGestRentway ChallengeIT ProtótipoAquamatrixFcore FapricelaNewHotelGRIDGolfinhosoftPlataforma WattElsifWebgescomINOVAsis  ","version":"Next","tagName":"h2"},{"title":"Local Authority Management​","type":1,"pageTitle":"List of Integrations","url":"/en/docs/guides/main#local-authority-management","content":" iFREG-SNC-APiTaxasMedidata Sigma-SNCairc SNC-APFresoft ERP  ","version":"Next","tagName":"h2"},{"title":"Document Management​","type":1,"pageTitle":"List of Integrations","url":"/en/docs/guides/main#document-management","content":" iDokeDocuments - FlowinnWebdoc Ambisig  ","version":"Next","tagName":"h2"},{"title":"Public Procurement​","type":1,"pageTitle":"List of Integrations","url":"/en/docs/guides/main#public-procurement","content":" acinGov  ","version":"Next","tagName":"h2"},{"title":"EDI Brokers​","type":1,"pageTitle":"List of Integrations","url":"/en/docs/guides/main#edi-brokers","content":" SaphetyCegid YetEdicomSERESGenerixIndra - MinsaitFE-APPageroeFaturaGovSeeburgerInposiaCompacerMontovabaVel - Voxel GroupAtos - Eviden  *List updated on 24 April 2025 ","version":"Next","tagName":"h2"},{"title":"Introduction","type":0,"sectionRef":"#","url":"/en/docs/integrations/as2/intro","content":"","keywords":"","version":"Next"},{"title":"Scope​","type":1,"pageTitle":"Introduction","url":"/en/docs/integrations/as2/intro#scope","content":" Communication via AS2 is primarily intended for EDI brokers and facilitates real-time transmission of documents and status messages. To initiate this connection, you should request our AS2 credentials from the support team.  ","version":"Next","tagName":"h2"},{"title":"Technical details​","type":1,"pageTitle":"Introduction","url":"/en/docs/integrations/as2/intro#technical-details","content":" Active MDN signature3DES encryption algorithmSHA1 signature algorithmAsynchronous MDNSupported formats: CIUS-PT, CEF Telecom  ","version":"Next","tagName":"h2"},{"title":"Testing phase​","type":1,"pageTitle":"Introduction","url":"/en/docs/integrations/as2/intro#testing-phase","content":" After credentials and certificates are configured, a simple connection test between partners is usually performed using a text file.  After this phase, real documents are sent in the testing environment, moving to production once the documents and status messages have been validated. If the broker is already integrated with multiple customers, each new customer can move to production immediately after the connection request.  ","version":"Next","tagName":"h2"},{"title":"Formats and states​","type":1,"pageTitle":"Introduction","url":"/en/docs/integrations/as2/intro#formats-and-states","content":" All documents received by ilink are subject to CIUS-PT validation. See online validator.  Note: To include a PDF file in the invoice, it must be inserted as a base64-encoded string inside the element AdditionalDocumentReference &gt; Attachment &gt; EmbeddedDocumentBinaryObject. See example.  Note: You can consult various examples, as well as the full CIUS-PT specification here. ","version":"Next","tagName":"h2"},{"title":"Other aspects","type":0,"sectionRef":"#","url":"/en/docs/integrations/as2/others","content":"","keywords":"","version":"Next"},{"title":"Digital signature​","type":1,"pageTitle":"Other aspects","url":"/en/docs/integrations/as2/others#digital-signature","content":" The AS2 protocol requires the use of a signature applied at the transport level, via S/MIME and X.509 certificates. Authentication results from the comparison between the issuer's and recipient's public and private keys.  Document-level signatures are mandatory for communications via web services, but optional for AS2 communications, since this channel already provides a signature at the S/MIME level. Source: Electronic Document Transmission Guide FE-AP, ESPAP-IP  ilink always validates the signature of all received documents. You can use this validator to verify the signature. The following formats are accepted: PADES (PDF), XMLDSig and XADES-BES enveloped (XML). ilink expects the public key used in the signature to be included in the XMLDSig; pre-configuration of keys is not required.  ","version":"Next","tagName":"h2"},{"title":"Connection requests​","type":1,"pageTitle":"Other aspects","url":"/en/docs/integrations/as2/others#connection-requests","content":" Connection requests must be submitted to the ilink team via the connection portal whenever a customer of an external broker wishes to connect to an ilink customer (and vice versa). This process is carried out for each pair of customers.  When the ilink team receives a connection request from another broker, the response will include any additional validations required by the customer for received files (e.g., attached PDF, commitment number, etc.), if applicable.  ","version":"Next","tagName":"h2"},{"title":"Certificate changes​","type":1,"pageTitle":"Other aspects","url":"/en/docs/integrations/as2/others#certificate-changes","content":" Certificates used by ilink for AS2 communications normally have a validity of 3 years. Any certificate changes are communicated to partners 1 month in advance. ","version":"Next","tagName":"h2"},{"title":"Introduction to the REST API","type":0,"sectionRef":"#","url":"/en/docs/integrations/api/scope","content":"","keywords":"","version":"Next"},{"title":"Scope​","type":1,"pageTitle":"Introduction to the REST API","url":"/en/docs/integrations/api/scope#scope","content":" The ilink REST API allows programmatic control of the main document operations available on the ilink platform, facilitating integration with external systems.  ilink supports two main integration flows: document receiving and issuing, with the corresponding reporting of document states. You may implement both flows or only one, depending on your software requirements.  ","version":"Next","tagName":"h2"},{"title":"Prerequisites​","type":1,"pageTitle":"Introduction to the REST API","url":"/en/docs/integrations/api/scope#prerequisites","content":" To integrate via the API, you must first contact our team (apoio@ilink.pt) o request access to the test/quality environment.  The provided access includes:  A platform token, which identifies the system/platform accessing the webserviceA public key, which identifies the customer/TIN requesting access to the webservice  This means that each customer wishing to issue or receive documents must be pre-registered with our team so that their public key can be generated. The platform token is unique to the system being integrated (shared by all clients using that system) and must be used in all API calls.  For test access, 2 customers/TINs are also provided, along with their respective credentials for accessing the ilink portal. You should use these entities to perform document transactions between them and optionally access the portal to consult the documents. The assigned TINs may be changed if necessary.  Note: New access credentials (platform token and public key per TIN) will be provided upon deployment to production.  ","version":"Next","tagName":"h2"},{"title":"Technical Notes​","type":1,"pageTitle":"Introduction to the REST API","url":"/en/docs/integrations/api/scope#notas-técnicas","content":" The webservice follows the REST architectureHTTP status codes returned comply with RFC 7231All data sent (including XML attachments) must be encoded in UTF-8. Formats such as ANSI, UTF-8 BOM, and ISO 8859-1 should be avoided to ensure compatibility with all recipient systemsResponses (payloads) are returned in JSON formatilink servers operate exclusively via HTTPS, com versão TLS 1.2 (or communication issues, see possible solutions for Java and C#)The Swagger specification and demo client are available here  ","version":"Next","tagName":"h2"},{"title":"Environments and important considerations​","type":1,"pageTitle":"Introduction to the REST API","url":"/en/docs/integrations/api/scope#environments-and-important-considerations","content":" There are 2 distinct environments, with different base URLs and usage conditions:  Environment\tBase URLTesting/QA\thttps://ilink.acin.pt/ilinktests-api/api/v1/pt Production\thttps://ilink.pt/ilink-api/api/v1/pt  The testing environment is only available in Portugal and Spain.The production environment provides a global availability SLA of 99.90%, in accordance with our terms of service.There is a usage limit of 200 requests/minute. After exceeding this limit, the software is blocked for 2 minutes.  Note: The documents issued and received through the API can be consulted in the ilink test portal using the credentials provided. ","version":"Next","tagName":"h2"},{"title":"Security Considerations","type":0,"sectionRef":"#","url":"/en/docs/integrations/webhooks/security","content":"Security Considerations Using webhooks assumes that the URL/port in question is publicly accessible, or at least reachable from our test and production environments! To achieve this, it may be necessary to open ports or create the following exceptions in the firewall of the machine running the web service: Environment\tDomain\tIP AddressTesting/QA\thttps://ilink.acin.pt\t62.28.56.162:443 Production\thttps://ilink.pt\t193.43.40.153:443 If the communication process for a document fails, ilink will attempt to send it again up to 10 times over the next 7 days, with increasingly longer intervals between each attempt. After 10 failed attempts, ilink will stop trying to send that document to the ERP. A document is considered successfully delivered to the ERP when the webhook response returns an HTTP status code 200 (regardless of the content of the response). We recommend avoiding long-running processes in the response endpoint. Important: When implementing this endpoint, the ERP is responsible for validating the access key and subsequently recording the received information in its system. We strongly recommend that your system validates the access key sent in the headers of our request; otherwise, you are accepting data from an unknown source. ilink sends your key in the header Authorization: Bearer {INTEGRATION_KEY}. If no key is defined for the webhook, the integrator application token will be used.","keywords":"","version":"Next"},{"title":"Introduction to Webhooks","type":0,"sectionRef":"#","url":"/en/docs/integrations/webhooks/intro","content":"","keywords":"","version":"Next"},{"title":"Retry Policy​","type":1,"pageTitle":"Introduction to Webhooks","url":"/en/docs/integrations/webhooks/intro#retry-policy","content":" A webhook is considered successfully delivered to the ERP when its response returns an HTTP status code 200 (regardless of the response content). We recommend avoiding long processing times on the response endpoint, as the connection may be closed before the processing is completed.  If the communication process fails, ilink will attempt to communicate again up to 10 times within the next 7 days, with progressively longer intervals between each attempt. After 10 failed attempts, ilink will stop trying to deliver that information to the ERP.  Attempt number\tTime until next attempt1 to 2\t4 hours 3 to 5\t5 hours 6 to 9\t12 hours ","version":"Next","tagName":"h2"},{"title":"Pre-production checklist","type":0,"sectionRef":"#","url":"/en/docs/integrations/api/checklist","content":"","keywords":"","version":"Next"},{"title":"Interoperability agreement (mandatory)​","type":1,"pageTitle":"Pre-production checklist","url":"/en/docs/integrations/api/checklist#interoperability-agreement-mandatory","content":" It must be signed and returned to acin. Additionally, we recommend that you send us a brief description of the software to be integrated and the company logo for promotional purposes.  ","version":"Next","tagName":"h2"},{"title":"Sending documents (if applicable)​","type":1,"pageTitle":"Pre-production checklist","url":"/en/docs/integrations/api/checklist#sending-documents-if-applicable","content":" Test the creation of a document between both test entities, without validation errors, containing: Attached PDFCommitment numberSupplier's full address (street, town, postcode)Supplier's share capitalOrder/requisition numberCustomer's GLNDelivery location's GLN When sending to non-public entities (e.g., sending an e-mail with a PDF), confirm that: An email with the invoice is sent to the recipientXML signature is disabled (see details) if a qualified digital signature is used in ilink When checking the status of issued documents, test whether the software receives and interprets the state correctly If the document is rejected/corrected, confirm that it is possible to resend it with the corrected data  ","version":"Next","tagName":"h2"},{"title":"Receiving documents (if applicable)​","type":1,"pageTitle":"Pre-production checklist","url":"/en/docs/integrations/api/checklist#receiving-documents-if-applicable","content":" Confirm that a received document is correctly integrated into the software, including communication of import and acceptance.  ","version":"Next","tagName":"h2"},{"title":"Deployment to production (mandatory)​","type":1,"pageTitle":"Pre-production checklist","url":"/en/docs/integrations/api/checklist#deployment-to-production-mandatory","content":" Configure the production URL in the softwareRequest the application token and key(s) for the production entity(ies) from ilinkEnsure that the necessary authentications work in productionConfirm that the customer has all connections configured in the ilink portal and active transactions (validate with support)Optional: verify that the customer has digital signature configured in productionOptional: verify that the customer has the invoicing e-mail template configured in productionOptional: inform the webhooks and authentication keys to be used in the production environment ","version":"Next","tagName":"h2"},{"title":"Receiving documents","type":0,"sectionRef":"#","url":"/en/docs/integrations/api/received","content":"","keywords":"","version":"Next"},{"title":"Scope​","type":1,"pageTitle":"Receiving documents","url":"/en/docs/integrations/api/received#scope","content":" This feature allows automatic entry of invoicing documents into the recipient's ERP, simplifying integration into accounting systems. It also allows the issuer to be notified of the document's acceptance and integration state (paid, accepted, rejected, etc.).  In this integration workflow, the following points must be implemented:  Data reading and processing: Extract information from XML or other structured data in the document to record it correctly in the ERPIntegration state communication: Inform ilink of the outcome of the document integration processAcceptance state management: Communicate the acceptance status of the document, including detailed messages in case of error or rejection  ","version":"Next","tagName":"h2"},{"title":"Receiving methods​","type":1,"pageTitle":"Receiving documents","url":"/en/docs/integrations/api/received#receiving-methods","content":" Allows you to view and integrate documents into the system. Receiving can be made in two ways: Manual document viewing or Incoming webhook.  ","version":"Next","tagName":"h2"},{"title":"Manual document consultation​","type":1,"pageTitle":"Receiving documents","url":"/en/docs/integrations/api/received#manual-document-consultation","content":" In this mode, you must access the endpoint GET /apps/documents. You can specify search parameters to filter the results. The response includes the main data from the documents and pagination information through the properties rows (number of elements per page) and page (page number).  To view the details of a document and access the XML and PDF files, use the GET /apps/documents/{id} method, using one of the ids obtained in the previous list.  The endpoint can be called periodically (background process) or by user action in the system (in real time).  Note: The public key used here corresponds to the entity receiving the documents. The key that identifies who accesses the received documents must be used.  Important: Excessive use of this endpoint should be avoided. Too many calls may result in timeouts or access restrictions, in accordance with the interoperability agreement.  ","version":"Next","tagName":"h3"},{"title":"Incoming webhook (recommended)​","type":1,"pageTitle":"Receiving documents","url":"/en/docs/integrations/api/received#incoming-webhook-recommended","content":" Neste modo, o ilink notifica o ERP sempre que chega um novo documento, dispensando consultas frequentes ao endpoint GET /apps/documents. Para mais informação, ver a secção Webhooks.  Note: Document data is sent in a structured format, including public URLs for accessing the XML and PDF files.  ","version":"Next","tagName":"h3"},{"title":"Import and acceptance​","type":1,"pageTitle":"Receiving documents","url":"/en/docs/integrations/api/received#importação-e-aceitação","content":" After retrieving the document, the ERP must inform iLink of the processing status, i.e. whether it was successfully integrated or requires corrections. Two steps are required:  1. Communicate the document state Done via POST /apps/documents/{id}/accepted, indicating whether the document was accepted or not and, in case of rejection, the reasonA rejection reason must be provided if the document is not acceptedA rejected document may be resent by the issuer with corrected data 2. Communicate the document import (only if accepted) If the previous step indicated acceptance, the method POST /apps/documents/{id} must be called  Note: Rejected documents must not be imported.  Correct communication of accepted/imported documents ensures an audit trail and facilitates API consumption. If manual consultation is being used, documents already rejected or imported will not be returned in future calls. In other words, the endpoint GET /apps/documents does not return documents that have previously been rejected or imported.  The image below shows how the operations performed by the ERP are recorded in the iLink portal:    Proper use of document import also generates queryable information for the document issuer, confirming its integration with the recipient’s system.  ","version":"Next","tagName":"h2"},{"title":"Process States (optional)​","type":1,"pageTitle":"Receiving documents","url":"/en/docs/integrations/api/received#process-states-optional","content":" Note: Optional feature for information purposes only. It does not affect document reception.  ilink allows the creation of custom document states. When enabled, it is possible to consult and modify a document’s state via API. This capability allows external systems (e.g. document management) to update the process state in an integrated way, and is useful for synchronising internal organisational processes across systems. All process state changes are recorded in the document’s history.  Important: The process state is independent of the base state (received, accepted, etc.). It serves only for internal organisation and operational logging.  To view the available states, use GET /apps/processstates, which returns the complete list with the corresponding identification_code. To change a document’s state, use PUT /apps/documents/{id}/processstates, specifying the new identification_code.  Configuration of the process states to be used is carried out by the ilink support team. ","version":"Next","tagName":"h2"},{"title":"Types of Webhooks","type":0,"sectionRef":"#","url":"/en/docs/integrations/webhooks/types","content":"","keywords":"","version":"Next"},{"title":"New Document Webhook​","type":1,"pageTitle":"Types of Webhooks","url":"/en/docs/integrations/webhooks/types#new-document-webhook","content":" The new document webhook is an alternative to frequent polling of documents by the receiving entity. Each time a new document is sent to this entity, its new document callback will be invoked.  The implemented endpoint should expect the data defined in this specification.  ","version":"Next","tagName":"h2"},{"title":"Document Status Change Webhook​","type":1,"pageTitle":"Types of Webhooks","url":"/en/docs/integrations/webhooks/types#document-status-change-webhook","content":" The document status change webhook is an alternative to frequent polling of the status of each issued document by the sending entity. Each time the recipient of a sent document accepts, rejects, or receives a document, this status change callback will be invoked for the sending entity with the current data.  The implemented endpoint should expect the data defined in this specification. ","version":"Next","tagName":"h2"},{"title":"Technical Specification","type":0,"sectionRef":"#","url":"/en/docs/integrations/api/specification","content":"","keywords":"","version":"Next"},{"title":"Swagger Documentation​","type":1,"pageTitle":"Technical Specification","url":"/en/docs/integrations/api/specification#swagger-documentation","content":" ilink uses an OpenAPI 3 specification with a Swagger client, available here. In this web customer, you can perform test API calls, analyse the responses, and verify the data to be sent for each endpoint/method.  The Swagger client provided above should be used throughout your development process. It is also possible to check how API calls are constructed via cURL (see example below):    Note: Several HTTP clients, are also provided in over 50 languages and frameworks, automatically generated from our specification, which can serve as initial support for your integration process.  ","version":"Next","tagName":"h2"},{"title":"Authorisation​","type":1,"pageTitle":"Technical Specification","url":"/en/docs/integrations/api/specification#authorisation","content":" All requests to the API must include the following authorisation header:  Authorization: Bearer {TOKEN_PLATAFORMA}  In the Swagger client, the authorisation process is performed by entering the platform token after clicking the Authorize button.    After this step, note that all subsequent API requests include the Authorization header:    ","version":"Next","tagName":"h2"},{"title":"Authentication​","type":1,"pageTitle":"Technical Specification","url":"/en/docs/integrations/api/specification#autenticação","content":" Before making the first API call to ilink, authentication per customer/TIN is required. This authentication serves as an initial handshake between the customer and ilink and is performed via the endpoint POST /apps/authentications:    A valid authentication should return this response:  HTTP status: 200 OK { &quot;success&quot;: true, &quot;message&quot;: { &quot;code&quot;:&quot;e123&quot;, &quot;msg&quot;:&quot;Integration completed successfully.&quot; } }   Authentication is valid indefinitely (only needs to be invoked once per customer/TIN accessing the API). It can also be revoked using the DELETE /apps/authentications method:    If authentication is not completed, or the Authorization header is not sent in API requests, all calls will be rejected for that customer/TIN with the following error:  HTTP status: 401 Unauthorized { &quot;success&quot;: false, &quot;errors&quot;: [ { &quot;code&quot;: &quot;e069&quot;, &quot;msg&quot;: &quot;Invalid authentication&quot; } ] }   Note: In production, each customer/TIN must authenticate again. ","version":"Next","tagName":"h2"},{"title":"ilink Knowledge Base","type":0,"sectionRef":"#","url":"/en/docs/","content":"","keywords":"","version":"Next"},{"title":"What is ilink?​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#enquadramento-legal","content":" Ilink is an integration platform that enables efficient communication of electronic invoices between different systems and applications. With support for multiple protocols and data formats, ilink facilitates the exchange of information in a secure and reliable manner.  The platform offers tools to validate, transform and forward electronic invoices, ensuring compliance with legal requirements and industry standards. In addition, it provides monitoring and auditing features, allowing you to track the status of transactions and quickly identify any problems in communication between systems.  Click here to view the list of systems currently integrated with ilink.  ","version":"Next","tagName":"h2"},{"title":"Legal Framework​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#enquadramento-legal","content":" The diagram below describes the deadlines for implementing electronic invoicing in public procurement in Portugal:    See Legal Framework in detail.  Note: To send invoices to FE-AP, you must first register the supplier (once validated, they will be able to send invoices to all FE-AP public entities). How to register?  ","version":"Next","tagName":"h2"},{"title":"Formats and technical standards​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#formatos-e-normas-técnicas","content":" Ilink uses the UBL 2.1 format in the CIUS-PT technical standard, implemented by eSPap, and adapted from the European Standard EN16931 for all sales documents (Invoices and Credit Notes). For purchase documents (Orders), we use the international standard PEPPOLBIS3, also based on UBL 2.1.  ","version":"Next","tagName":"h2"},{"title":"Types of Integration​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#tipos-de-integração","content":" Before starting the integration process, you will first need to decide on the most appropriate channel for your system. This documentation covers the following types of integrations available:  ","version":"Next","tagName":"h2"},{"title":"🌐 Integration via REST API​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#-integração-via-api-rest","content":" Complete documentation on how to use ilink's REST APIs for integration with web systems. Includes detailed instructions on authentication, available endpoints, request and response formats, code examples, and integration best practices.  Advantages:  It is easy to integrate into web applications or programmes that allow communication with external web servicesAllows you to send documents via XML, or alternatively by sending the document data in structured format, with ilink responsible for generating the final XML.Allows access to all documents previously received by a customerAllows you to change the state of a received document, including its acceptance, rejection, or regularisationAllows you to view the history of documents  ","version":"Next","tagName":"h3"},{"title":"📡 Integration via AS2​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#-integração-via-as2","content":" Detailed guide for using the preferred integration protocol by other EDI brokers, which works exclusively by transferring XML files. It requires the implementation of an AS2 client for exchanging documents and state messages. This guide covers the procedures for sending and receiving documents.  Advantages  Universally accepted standard for EDI transmissionIt can be implemented quickly if the system to be integrated already has a functional AS2 customerImplements additional security mechanisms using certificates embedded in the communication protocolAllows the exchange of documents and state messages in real time, without the need for consultation mechanismsAllows you to change the state of a document (accept, reject, regularise, etc.) and send this information back to the issuer  Note: We only recommend using this protocol if your system already implements it for other partners.  ","version":"Next","tagName":"h3"},{"title":"🔔 Webhooks ilink​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#-webhooks-ilink","content":" How to configure and use webhooks to receive real-time notifications about system events. This section explains how to register endpoints, configure event types, authenticate calls, and handle incoming notifications. It includes practical examples and best practices to ensure reliability and security when receiving real-time information.  Advantages  Allows you to implement real-time callback mechanisms (Webhooks) The issuer can be notified when a document changes its state (accepted, rejected, etc.)The recipient can be notified when a new document is received Faster and more efficient than periodic event checkingComplements integration via REST  ","version":"Next","tagName":"h3"},{"title":"Specific Integration Guides​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#specific-integration-guides","content":" This section details how to configure ilink integration in some particular systems. It includes step-by-step instructions and specific configuration requirements for each system:  ","version":"Next","tagName":"h2"},{"title":"🖥️ Moloni Integration​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#%EF%B8%8F-integração-moloni","content":" Moloni integration allows documents to be communicated directly between Moloni software and ilink.  ","version":"Next","tagName":"h3"},{"title":"🗂️ Medidata Integration​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#%EF%B8%8F-integração-medidata","content":" Medidata integration allows you to automate the sending and receiving of documents in Medidata suite applications via SFTP protocols. This guide contains the prerequisites necessary to enable integration with this system.  ","version":"Next","tagName":"h3"},{"title":"Help​","type":1,"pageTitle":"ilink Knowledge Base","url":"/en/docs/#help","content":" Select the type of integration you wish to implement from the side menu to access the specific documentation.  For technical support, please contact the ilink team at apoio@ilink.pt or call 707 451 451. ","version":"Next","tagName":"h2"},{"title":"FEAP Onboarding","type":0,"sectionRef":"#","url":"/en/docs/onboarding-feap","content":"","keywords":"","version":"Next"},{"title":"Which public administration bodies are required to use the FE-AP solution?​","type":1,"pageTitle":"FEAP Onboarding","url":"/en/docs/onboarding-feap#which-public-administration-bodies-are-required-to-use-the-fe-ap-solution","content":" Public contractors bound by the use of the FE-AP solution provided by eSPap are:  bodies of the direct administration of the State, i.e. all bodies, services and agents integrated into the legal entity of the State, for example, Directorates-General, Regional Directorates, General Secretariats, DGEstE, ASAE, AT, IGF, among others;public institutions, such as IAPMEI, INEM, IPDJ, ISS, eSPap itself, among others.  See the list of ALL public entities currently using FE-AP.  ","version":"Next","tagName":"h2"},{"title":"How can PA suppliers join the FE-AP solution?​","type":1,"pageTitle":"FEAP Onboarding","url":"/en/docs/onboarding-feap#how-can-pa-suppliers-join-the-fe-ap-solution","content":" Ilink users can automatically send electronic invoices directly to FE-AP after completing the eSPap registration and onboarding process.  In brief, there are three steps:  ","version":"Next","tagName":"h2"},{"title":"1. Registration form​","type":1,"pageTitle":"FEAP Onboarding","url":"/en/docs/onboarding-feap#1-registration-form","content":" Completing the [supplier registration] form (https://adesao.feap.gov.pt/web/r/apps/fornecedores/pedido-adesao).  Home page. Click on Registration Request Fill in your company details (all marked fields are mandatory)  Note: If you represent more than one tax entity, you must download the template and complete it in step 1.2:  Fill in your company details (the person responsible for following up on electronic invoicing) Enter that you will be using a broker Identify the ACIN broker, as well as the person responsible for the project in the next step, and mark the authorisation Enter an email address to receive document delivery notifications and upload an example of an actual invoice and credit note Final step: agree and submit Receive the confirmation email and project ID, which will be requested in the final phase of the project.  ","version":"Next","tagName":"h3"},{"title":"2. Testing​","type":1,"pageTitle":"FEAP Onboarding","url":"/en/docs/onboarding-feap#2-testing","content":" After validation by the eSPap team, the supplier is contacted by eSPap via email informing them of their project ID and the start date of testing:  The supplier must request access to the ilink quality (testing) environment and issue various documents to these testing entities. These documents can be created manually in ilink, but we recommend that they be integrated directly from your EDI/ERP software. Note: you must always send the PDF of the invoice attached during the testing phase.After sending these documents to the testing entities, the supplier must inform the iLink team to verify that the files have been successfully communicated to eSPap, and if not, how they should correct the documents.As documents are successfully integrated into the eSPap quality environment, the supplier will receive confirmation emails like this one. Note: you must keep the IDs obtained, as well as the documents you sent for testing, as they are required for the final stage!  2.1 Filling in invoice fields in tests​  If you do not wish to create the documents manually in ilink, you may skip this step.  It is highly recommended to fill in the fields below during the testing phase:  Order number (please use the value TESTENOTAENCOM1234): Delivery address (you must use the address on the invoice) Payment terms (you must use the payment terms stated on the invoice) Payment methods (you must use the payment methods listed on the invoice) Commitment number (must use the value TESTECOMPROMISSO1234) Document PDF (mandatory)  ","version":"Next","tagName":"h3"},{"title":"3. Deployment to production​","type":1,"pageTitle":"FEAP Onboarding","url":"/en/docs/onboarding-feap#3-deployment-to-production","content":" After sending valid invoices and credit notes and their confirmation by the iLink team, the supplier must complete the deployment to production form.  In this form, you will need to fill in a list of documents that were used for testing: In the first step, you must identify the project ID (provided by ESPAP via email) and the tax identification number associated with the project. You must then attach images of the emails received where requested in the form above (only the invoice and credit note are mandatory) Finally, you must agree and submit the form:  A confirmation email will then be sent:  ","version":"Next","tagName":"h3"},{"title":"4. Formalisation of registration​","type":1,"pageTitle":"FEAP Onboarding","url":"/en/docs/onboarding-feap#4-formalisation-of-registration","content":" After confirmation of acceptance, an email will be received from eSPap asking to finalise the process via the following link, where the necessary details must be filled in and the documentation requested by the company's legal representative must be attached:  https://www.feap.gov.pt/Paginas/PedidoAdesao.aspx  This concludes the deployment to production in FE-AP. After validation by eSPap, the process is complete and will go into production on the date indicated in the email. If any errors are detected, the ilink team will contact you.  ","version":"Next","tagName":"h3"},{"title":"More information​","type":1,"pageTitle":"FEAP Onboarding","url":"/en/docs/onboarding-feap#more-information","content":" eSPap Frequently Asked Questions  List of all suppliers currently registered with FE-AP ","version":"Next","tagName":"h2"},{"title":"API Flows","type":0,"sectionRef":"#","url":"/en/docs/integrations/api/flows","content":"API Flows The image below consolidates the ilink API integration flows previously described:","keywords":"","version":"Next"},{"title":"Status messages","type":0,"sectionRef":"#","url":"/en/docs/integrations/as2/status-messages","content":"","keywords":"","version":"Next"},{"title":"Status list​","type":1,"pageTitle":"Status messages","url":"/en/docs/integrations/as2/status-messages#status-list","content":" ilink MessageStatus values include the EDI statuses defined by eSPap in the element DocumentResponse&gt;Response&gt;ResponseCode:  Code\tDescriptionACCEPTED\tDocument passed XML validation and quality rules, was integrated into the system and sent to recipient ERROR\tDocument did not pass initial quality validation (invalid XML, missing mandatory fields, recipient rules not met, etc.) 14\tDocument rejected by recipient and awaiting regularization (must be corrected and resent, or replaced with a credit/debit note) 22\tDocument returned by recipient and must be cancelled; a new document should be issued 33\tDocument in payment 29\tDocument paid 11\tDocument processed by recipient (accepted) 30\tCredit note accepted by recipient  Note: ERROR, 14 and 22 statuses include an error description in DocumentResponse&gt;Response&gt;Description. While 33 and 29 are not sent by ilink, they are received and interpreted correctly by the system.  ","version":"Next","tagName":"h2"},{"title":"EDI status flow​","type":1,"pageTitle":"Status messages","url":"/en/docs/integrations/as2/status-messages#edi-status-flow","content":" Possible flows a document can follow:  Description\tProcessDocument arrived at ilink and failed semantic XML or quality rules validation (CIUS-PT error, missing mandatory fields, non-existent connection).\tERROR Document arrived at ilink and passed XML validation, being sent to the recipient.\tACCEPTED DDocument arrived at ilink, validated correctly, and reached the recipient, but the recipient did not integrate it and requested regularisation (credit note issuance or rectified resending).\tACCEPTED &gt; 14 Document arrived at ilink, validated correctly, and reached the recipient, but was returned, requiring a new document.\tACCEPTED &gt; 22 Document arrived at ilink, validated correctly, and was integrated into the recipient’s accounting system.\tACCEPTED &gt; 11 Credit note arrived at ilink, validated correctly, and was integrated into the recipient’s system for cash adjustment.\tACCEPTED &gt; 30  ","version":"Next","tagName":"h2"},{"title":"Document resending​","type":1,"pageTitle":"Status messages","url":"/en/docs/integrations/as2/status-messages#document-resending","content":" A document can only be resent after rectification if the last status is:  ERROR (validation or connection error)14 (regularisation requested by the customer)  For other statuses, resending is not allowed and the document will be rejected by the system. ","version":"Next","tagName":"h2"},{"title":"Issuing documents","type":0,"sectionRef":"#","url":"/en/docs/integrations/api/issued","content":"","keywords":"","version":"Next"},{"title":"Scope​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#scope","content":" The ilink platform allows integrator systems to issue documents that are automatically sent to their respective recipients. ilink manages the entire sending process for the ERPs and EDIs configured for each customer, making this process transparent for the API. These configurations are carried out by the ilink support team before before deployment to production.  The ilink platform supports the sending of electronic invoices in two different scenarios:  Sending signed PDFs via e-mail to end consumers or private companies In this scenario, it is not necessary to create connections with other EDIs. Simply indicate the destination e-mail address(es) in the document creation endpoint. For more information, see the section Sending methods. Sending CIUS-PT XML to public entities (mandatory in public contracts) In this scenario, it is necessary to configure the connections between TINs in advance and, possibly, between other external EDI brokers.  How are documents sent to other EDI brokers?During the production deployment phase, a survey of all entities that will receive documents via EDI, as well as their respective EDI brokers, must be carried out. Subsequently, the support team (apoio@ilink.pt) will configure the necessary connections to ensure that the documents are automatically integrated into each recipient’s system. Before sending documents to the FE-AP solution of eSPap, each issuer must also complete the FE-AP supplier enrolment process.  All documents issued are available on the ilink portal, both for the issuing entity and for the receiving entity.  Note: In the test environment, you should only issue documents between the two entities that have been granted access. If you wish to verify the functioning of document sending to an end consumer (arbitrary TIN), you should always issue the document through one of the entities that have been granted access.  IMPORTANT: When sending documents to public entities, we strongly recommend implementing the following aspects, otherwise you may not be able to integrate the documents with certain systems:  Commitment numberOriginal PDF file of the invoiceOrder or requisition number (if applicable)Supplier's share capitalCustomer's e-mail address (only for the offices of the Regional Government of Madeira)All supplier address details (street, postal code, city, etc.)Customer GLN (if applicable)Possibility of resending the document based on the state obtained (useful for correcting and resending a previously rejected document)  ","version":"Next","tagName":"h2"},{"title":"Digital signature​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#assinatura-digital","content":" Ilink allows you to automatically sign attachments to issued documents (XML and PDF), provided that the issuing entity has purchased and configured a seal from one of the qualified digital signature providers. Currently, only GTS - Global Trusted Sign is supported, but there are plans to support the remaining providers in Portugal.  This means that the ERP is not required to integrate with a signature provider and can (optionally) delegate the certification process to ilink. Alternatively, the ERP itself can perform the certification process and send the signed documents to ilink.  Note: In the ilink signature scenario, by default, all resulting files are signed upon entry (xml and pdf) and subsequently sent to the customer. This behaviour can be changed, allowing you to define which files are signed. For more information, see the section on signature consumption.  In the case of signing via ERP, the digital signature of the document is always cryptographically validated for all documents entering the system. A document with an invalid signature, both in XML and PDF, will not integrate and will always return an error via API as follows:  HTTP status: 400 Bad request { &quot;success&quot;: false, &quot;errors&quot;: { &quot;document&quot;: { &quot;code&quot;: &quot;e217&quot;, &quot;msg&quot;: &quot;The signature on the document is not valid.&quot; } } }   The previous error indicates that the document has been altered since it was signed, or that the signature was generated incorrectly. The following validator can be used to verify the validity of document signatures. The signature formats recognised by ilink are PADES and PKCS7-B (PDF), or XMLDSig and XADES-BES (XML).  Note: The legal requirements for the signature of electronic invoices are available in Decree-Law 28/2019, section II, article 12.  Note: Ilink signs PDF documents in PADES and XML documents in XADES-BES enveloped.  ","version":"Next","tagName":"h2"},{"title":"Sending methods​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#métodos-de-envio","content":" Once authentication has been successfully completed, we are ready to start sending documents. The ilink API provides two approaches for sending documents:  ","version":"Next","tagName":"h2"},{"title":"Sending XML in UBL 2.1 CIUS-PT format (or UBL 2.1 PEPPOLBIS3 - Orders)​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#sending-xml-in-ubl-21-cius-pt-format-or-ubl-21-peppolbis3---orders","content":" In this method, the integrator system must correctly generate the XML file before sending it to ilink. eSPap provides the technical specification for the CIUS-PT format here.  All XML files sent using this method are validated according to the official eSPap validator, version 2.1.2, and the API will return an error if syntactic inconsistencies are found. eSPap provides a Schematron validator that implements all the validations of European Standard EN16931 CIUS and the additional validations of CIUS-PT, available online at this link. If the files validate syntactically in the online validator, then they should validate in ilink, with the exception of any additional validations defined by the document recipient.  Note: To add a PDF file to your electronic invoice and view other use cases, see the [use cases] section(usecases#criação-de-documentos-por-envio-do-cius-pt).  Note: eSPap also provides several CIUS-PT examples.  Some examples of errors in the XML validation process:  HTTP status: 400 Bad request { &quot;success&quot;: false, &quot;errors&quot;: { &quot;document&quot;: { &quot;code&quot;: &quot;e217&quot;, &quot;msg&quot;: &quot;[BR-CO-25]-If the amount payable (BT-115) is positive, you must indicate the due date (BT-9) or the payment terms note(BT-20).&quot; } } }   HTTP status: 400 Bad request { &quot;success&quot;: false, &quot;errors&quot;: { &quot;document&quot;: { &quot;code&quot;: &quot;e217&quot;, &quot;msg&quot;: &quot;[DT-CIUS-PT-166]-Amount due for payment (BT-115) = Invoice total amount with VAT (BT-112) -Paid amount (BT-113) +Rounding amount (BT-114), with an acceptance range of 1.00 € (it does not mean that this tolerance is accepted by the customer).&quot; } } }   The method to be used for sending the XML is POST /apps/documentsUBL. In this context, the public key identifies the issuer of the document and must correspond to the key associated with the issuer's TIN specified in the XML (AccountingSupplierParty&gt;Party&gt;PartyTaxScheme&gt;CompanyID for invoices/credit notes, or AccountingCustomerParty&gt;Party&gt;PartyTaxScheme&gt;CompanyID for orders). If this does not occur, the API will return the following error:  HTTP status: 400 Bad request { &quot;success&quot;: false, &quot;errors&quot;: { &quot;supplier&quot;: { &quot;code&quot;: &quot;e199&quot;, &quot;msg&quot;: &quot;The entity creating the document must be a customer or supplier of the new document.&quot; } } }   If the XML is valid and complies with all the standard validations, as well as all additional business rules of the recipient, the API returns a successful response, along with the main data from the created document:  HTTP status: 201 Created { &quot;success&quot;: true, &quot;message&quot;: { &quot;code&quot;: &quot;s011&quot;, &quot;msg&quot;: &quot;Document successfully created&quot; }, &quot;response&quot;: { &quot;data&quot;: { &quot;id&quot;: &quot;60796c3c2a6fa2.53909016&quot;, &quot;number&quot;: &quot;7411111&quot;, &quot;emission_date&quot;: &quot;2021-04-15&quot;, &quot;type_document_fact&quot;: { &quot;id&quot;: &quot;5c9cb870a5ef57.36583702&quot;, &quot;code&quot;: &quot;380&quot;, &quot;alias&quot;: &quot;invoice&quot;, &quot;type&quot;: &quot;FT&quot;, &quot;description&quot;: &quot;Invoice&quot; }, &quot;type_document&quot;: { &quot;alias&quot;: &quot;issued&quot;, &quot;description&quot;: &quot;Issued&quot; }, &quot;state_document&quot;: { &quot;id&quot;: &quot;5c9cb878745b16.4225687&quot;, &quot;alias&quot;: &quot;sent&quot;, &quot;description&quot;: &quot;Sent to customer.&quot; } } } }   Note: A document is successfully sent to the recipient via EDI when the state_document.alias field has the value sent or accepted. If you only want the document to be sent by email, the document state should be ignored. Instead, you should consult the record of e-mails sent via state consultation.  ","version":"Next","tagName":"h3"},{"title":"Sending structured document data​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#sending-structured-document-data","content":" When using this option, the ERP does not need to generate the entire XML file, as ilink is responsible for generating the final XML file. Thus, the ERP only needs to send all data related to the document to ilink. The endpoint to use here is POST /apps/documents    The specification for this method is extensive, as it covers all possible fields in an invoice/order, which are duly documented in the specification. All documents created by this endpoint are subject to the same validations as documents sent by the method POST /apps/documentsUBL, in other words, the XML resulting from the data entered will be validated according to the official eSPap validator, which can be consulted online at this link, and according to the additional business rules of the document recipient, if any.  Note: To add a PDF file to an electronic invoice and other common situations, see the [use cases] section(usecases#criação-de-documentos-por-envio-de-dados).  Note: It is possible to send multiple attachments in a document using the files[] field (see specification above). However, the visual representation of the document (i.e. the original PDF of the invoice used for printing) must always be sent in the file field, with the files[] field reserved for additional files (order notes, dispatch notices, transport guides, etc.). **If the document issuer has an active digital signature on ilink, all attachments will be signed by default, and transaction consumption will take into account the total size of all attachments sent (1 transaction is debited for every 1MB of attachments sent).  ","version":"Next","tagName":"h3"},{"title":"Sending the document​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#envio-do-documento","content":" ","version":"Next","tagName":"h2"},{"title":"Sending via EDI​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#sending-via-edi","content":" A document, after being successfully created by any of the methods described (XML sending or data sending), will be automatically sent to the recipient by EDI. However, in specific cases, it may not be sent immediately via EDI due to missing configurations and/or other anomalies in the ilink platform or the recipient's system. If this occurs, a to_send_status field will be returned in the document response to detail the situation:  HTTP status: 201 OK { &quot;success&quot;: true, &quot;message&quot;: { &quot;code&quot;: &quot;s011&quot;, &quot;msg&quot;: &quot;Document successfully created&quot; }, &quot;response&quot;: { &quot;data&quot;: { &quot;id&quot;:&quot;60796c3c2a6fa2.53909016&quot;, &quot;state_document&quot;: { &quot;id&quot;: &quot;5c9cb870f34b16.42025494&quot;, &quot;alias&quot;: &quot;tosend&quot;, &quot;description&quot;: &quot;To be sent to the customer.&quot; }, &quot;to_send_status&quot;: { &quot;code&quot;: &quot;sent_connection&quot;, &quot;title&quot;: &quot;Await acceptance of connection with the recipient of the document.&quot; } } } }   Note: You can verify that the document was NOT delivered via EDI because the state_document.alias field assumes the value tosend and the reason for the error is described in the to_send_state field. In this situation, you must first complete the EDI connection with the recipient and then resend the document.  The possible reasons (code) for a document not being sent are:  sent_connection, no_connection: Missing connection with recipientregistered_entity: The recipient is not registered with ilinkreceived_pay_transactions: The recipient bears the costs of the documents received but does not have sufficient transactions to send the document  After rectifying the error, you will be able to resend the document (see section on [resending documents])(issued#criareditar-documento)).  Note: The document state (state_document) only applies to EDI sendings. If the document is only sent to an arbitrary customer via e-mail (PDF), the sending state does not reflect the sending of the e-mail. See the following section for more information.  ","version":"Next","tagName":"h3"},{"title":"Sending via email​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#sending-via-email","content":" After a document has been successfully created (HTTP status 201) using any of the methods described (sending XML or sending data), it will be sent via email to the recipient if the send_by_email field is specified with the value 1. The address(es) of the recipient(s) of the document can be specified in three ways:  in the additional_emails[] field (in both sending methods)in the customer[email] field (only in the sending data method)in the cac:AccountingCustomerParty/cac:Party/cac:Contact/cbc:ElectronicMail XML element (only in the sending XML method).  To check the sending of emails and their reading by the customer, see the section on checking the state of issued documents.  ","version":"Next","tagName":"h3"},{"title":"Creation of documents and use of qualified digital signatures​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#criação-de-documentos-e-consumo-de-assinaturas-digitais-qualificadas","content":" Note: This section is only relevant for customers who use ilink to digitally sign issued documents. See details.  If a qualified digital signature is configured in ilink, all documents will be signed at the time of creation, including all files resulting from the electronic invoice (xml and pdf). Given that document signature is not required by law in all usage scenarios, it is possible to individually control the signature of xml and pdf files at the time of document creation using the disable_xml_sign and disable_pdf_sign fields, available in both document creation methods ( XML or data). This reduces the consumption of digital signatures and optimises the document creation process.  In other words:  When sending a digital invoice via signed PDF to an end consumer or private customer, it will not be mandatory to sign the resulting XML file, so we recommend using the field disable_xml_sign: 1.When sending electronic invoices to the Public Administration via EDI (e.g. eSPap), it is not mandatory to sign the document; however, it is always possible to sign both files for additional security and integrity reasons. If, for example, you wish to disable the digital signature on the PDF attachment, simply use the option disable_pdf_sign: 1.The fields described above only take effect when the document issuer uses a qualified digital signature in ilink.  ","version":"Next","tagName":"h3"},{"title":"Additional validations​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#validações-adicionais","content":" The invoice recipient can configure additional requirements for certain fields (business rules) in ilink, even when these are not mandatory in the CIUS-PT specification. For example, a customer may specify that he or she only accepts invoices with a PDF file attached or with a specific commitment number. It is essential that these requirements are agreed in advance with the customer/recipient before going into production, in order to avoid integration errors.  If the document recipient requires the presence of a field not specified in the XML, the API will return an error as shown below and the document will not be generated:  HTTP status: 400 Bad request { &quot;success&quot;: false, &quot;errors&quot;: { &quot;commitment_number&quot;: { &quot;code&quot;: &quot;e048&quot;, &quot;msg&quot;: &quot;The commitment number is mandatory.&quot; } } }   Please note that errors are only returned in this format when the document recipient is an ilink customer and has the appropriate business rules configured on the platform. When a document is sent to an external EDI system, any failure in the validation process is normally communicated at a later time via a state change to Rejected, with the appropriate error message. It is important to note that not all EDI systems support the sending of state messages.  ","version":"Next","tagName":"h2"},{"title":"Create/edit document​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#criareditar-documento","content":" A document can be edited and resent to the recipient:  if it has not yet been sent to the end customeror if it has already been sent to the customer and the customer has requested a correction  In practical terms, the possibility of resending can be checked using the following response field in the document:  &quot;state_edi_document&quot;: { &quot;alias&quot;: &lt;state&gt; // possible resend states: 'regularization' ou 'reception' ou 'error' }   To check the state of a document, see the section on checking the state of issued documents.  To edit an existing document, simply repeat the request POST /apps/documentsUBL or POST /apps/documents with the corrected data, keeping the number, type and date of issue of the previous document:  HTTP status: 200 OK { &quot;success&quot;: true, &quot;message&quot;: { &quot;code&quot;: &quot;s012&quot;, &quot;msg&quot;: &quot;Document successfully created&quot; }, &quot;response&quot;: { &quot;data&quot;: { &quot;id&quot;: &quot;60796c3c2a6fa2.53909016&quot;, &quot;number&quot;: &quot;7411111&quot;, &quot;emission_date&quot;: &quot;2021-04-16&quot;, &quot;type_document_fact&quot;: { &quot;id&quot;: &quot;5c9cb870a5ef57.36583702&quot;, &quot;code&quot;: &quot;380&quot;, &quot;alias&quot;: &quot;invoice&quot;, &quot;type&quot;: &quot;FT&quot;, &quot;description&quot;: &quot;Invoice&quot; }, &quot;type_document&quot;: { &quot;alias&quot;: &quot;issued&quot;, &quot;description&quot;: &quot;Issued&quot; }, &quot;state_document&quot;: { &quot;id&quot;: &quot;5c9cb870f34b16.42025494&quot;, &quot;alias&quot;: &quot;tosend&quot;, &quot;description&quot;: &quot;To be sent to the customer.&quot; } } } }   If the document is not eligible for editing (i.e. it has already been sent or accepted by the end customer), an error will be displayed when attempting to resend it:  HTTP status: 400 Bad request { &quot;success&quot;: false, &quot;errors&quot;: { &quot;number&quot;: { &quot;code&quot;: &quot;e200&quot;, &quot;msg&quot;: &quot;Document already exists.&quot; } } }   ","version":"Next","tagName":"h2"},{"title":"Access to issued documents​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#access-to-issued-documents","content":" When a document is successfully registered, an id will always be returned in the responses, which identifies it to ilink. It is useful to save this identifier for future queries to the document.  HTTP status: 201 Created { &quot;success&quot;: true, &quot;message&quot;: { &quot;code&quot;: &quot;s011&quot;, &quot;msg&quot;: &quot;Document successfully created&quot; }, &quot;response&quot;: { &quot;data&quot;: { &quot;id&quot;: &quot;60796c3c2a6fa2.53909016&quot; } } }   The API also allows you to access all data (including generated XML and PDF) from all previously issued documents. To do so, use the GET /apps/documents/{id} method. The id received when creating the document must be used as a parameter here to access the corresponding document.  All data returned by this method is available in the specification.  Note: If the entity issuing the document has configured automatic document signature in ilink, the URLs for accessing the XML and PDF files will already return the signed files.  ","version":"Next","tagName":"h2"},{"title":"Consultation of documents issued on the portal (optional)​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#consultation-of-documents-issued-on-the-portal-optional","content":" The documents can also be consulted on the ilink test portal using the credentials provided by the entities. Here you can visually validate whether the information presented is consistent with the data sent via API:    To access the attachments of a document, you must access the document in the table and click on the magnifying glass icon:    Note: The documents must be present both at the issuing entity (issued documents section) and at the receiving entity (received documents section).  ","version":"Next","tagName":"h2"},{"title":"Consultation of state of issued documents​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#consulta-de-estado-de-documentos-emitidos","content":" It is also possible to access the current state of previously issued documents. This operation allows the issuer of the document to check whether the document has been accepted by the customer, or whether it is pending resending/regularisation, as well as the reasons that led to this.  ","version":"Next","tagName":"h2"},{"title":"Consultation of the state of documents sent via EDI​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#consultation-of-the-state-of-documents-sent-via-edi","content":" Ilink provides four simplified document states in the state_document property:  State\talias\tDescriptionTo be sent\ttosend\tthe document has not been sent to the customer. This probably means that some configuration is missing in ilink, the sender/recipient does not authorise a connection between them, or that some of the entities in the document do not have sufficient transactions to proceed with the sending. If you only want the document to be sent via email, this state should be ignored. Sent\tsent\tThe document has been sent to the customer and is awaiting acceptance. Please note that not all recipient systems support state communication, so some documents may never leave this state. Accepted\taccepted\tThe document has been sent and the customer has approved it. Final state. Rejected\trejected\tThe document was sent and the customer rejected it due to an inconsistency. The reason for rejection is provided in the response in the reasons field. The document can be sent again if a regularisation is requested.  Note: Ilink also returns the EDI processing state of the document (state_edi_document), which is independent of the above states. For more information, see the FE-AP Document Transmission Guide, page 7. However, reading the EDI state is not always relevant for invoicing software.  There are 3 approaches to accessing the state of a previously issued document: Individual state consultation, State change webhook, and State report.  In Individual state consultation, simply make the call GET /apps/documents/{id}. The id received when creating the document must be used as a parameter to access the document in question. The state is returned in the state_document field (see specification). This method only allows you to check the state of one document at a time, and as such is not recommended for customers who process a high volume of documents. In the State change webhook, ilink takes the initiative to inform the document issuer whenever the document changes state. This is the recommended option in terms of performance and speed, but it may not be feasible if the system to be integrated belongs to a network that is not publicly exposed to ilink. For more information, see the Webhooks section. In State report, the integrator application takes the initiative to consult the various events that led to changes in the state of the documents issued. To do so, simply make the call GET /apps/states-report/documents. Each event identifies the document and the changed state. It is possible to filter the returned events by document id, document number, date ranges, among others (see specification). This method allows the application to check the state of several documents simultaneously. In order to facilitate the use of state reporting, an event read endpoint is also available POST /apps/states-report/documents/read, which allows one or more previously obtained event ids to be marked as read. Events marked as read are not returned again in the state reporting endpoint, facilitating future queries of the previous method. This option is a scalable alternative for systems that cannot implement Webhooks.  ","version":"Next","tagName":"h3"},{"title":"Consultation of the state of documents sent via e-mail​","type":1,"pageTitle":"Issuing documents","url":"/en/docs/integrations/api/issued#consulta-de-estado-de-documento-enviado-via-e-mail","content":" When sending documents by email, it is possible to consult the record of e-mails sent to the customer and their read state. Please note that the state of the returned document (state_document) is not applicable in this scenario, as these documents are not normally sent via EDI, and as such, their sending state will usually be to_send. This state should be ignored in favour of the approaches described below:  In Individual state consultation, simply make the call GET /apps/documents/{id}. The id received when creating the document must be used as a parameter to access the document in question. In the response, you must access the emails property, which returns a list of sent messages and their reception and reading state. This method only allows you to query the state of one document at a time and has the same limitations as the individual document query in the previous section:  HTTP status: 200 OK { &quot;success&quot;: true, &quot;response&quot;: { &quot;data&quot;: { &quot;id&quot;: &quot;60796c3c2a6fa2.53909016&quot;, ... &quot;emails&quot;: [ { &quot;id&quot;: &quot;634672bab0f3b8.40302642&quot;, &quot;b_open&quot;: true, // true if the e-mail has been read by the recipient &quot;b_sent&quot;: true, // true if the e-mail was successfully sent &quot;created_at&quot;: &quot;2022-10-12 08:54:34&quot;, // date and time of e-mail sending &quot;opened_at&quot;: &quot;2022-10-12 09:14:16&quot;, // date and time of email reading &quot;address&quot;: { &quot;emails&quot;: [&quot;joao.freitas@email.com&quot;], // sending address } } ] } } }   Note: Some email clients (Outlook, etc.) may block the reading of emails, leaving b_open as false even if the email has been opened in some situations. Ilink also has the ability to detect if an email has been returned by the e-mail server, taking responsibility for successive attempts to resend it over time.  In Document history consultation, you can consult all procedural changes to a given document. This history will list all state changes that have occurred in the document in chronological order, as well as records of e-mails sent to the recipient, allowing for complete audit tracking. It can be accessed via GET /apps/documents/{id}/history. ","version":"Next","tagName":"h3"},{"title":"Use Cases","type":0,"sectionRef":"#","url":"/en/docs/integrations/api/usecases","content":"","keywords":"","version":"Next"},{"title":"Document creation via data submission​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#document-creation-via-data-submission","content":" ","version":"Next","tagName":"h2"},{"title":"Payment terms​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#payment-terms","content":" payment_terms[note]: 30 days   ","version":"Next","tagName":"h3"},{"title":"Place of consumption (CPE) in document lines​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#place-of-consumption-cpe-in-document-lines","content":" lines[0][additional_property][0][name]: CPE lines[0][additional_property][0][value]: PT1234567890   ","version":"Next","tagName":"h3"},{"title":"Commitment number in document header​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#commitment-number-in-document-header","content":" commitment_number: 2021/451   ","version":"Next","tagName":"h3"},{"title":"Commitment number in document lines​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#commitment-number-in-document-lines","content":" lines[0][commitment][number]: 2021/123 lines[0][commitment][line]: 1   ","version":"Next","tagName":"h3"},{"title":"Order number​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#order-number","content":" references[0][document_type]: order references[0][number]: 1234   ","version":"Next","tagName":"h3"},{"title":"Sending attached PDF (UTF-8)​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#sending-attached-pdf-utf-8","content":" file: (binary)   ","version":"Next","tagName":"h3"},{"title":"Other secondary attachments​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#other-secondary-attachments","content":" files[0]: (binary) files[1]: (binary)   Note: The PDF representing the document must always be sent in the file field.  ","version":"Next","tagName":"h3"},{"title":"Header discount​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#header-discount","content":" discounts_charges[0][type]: false // use true for charge discounts_charges[0][reason]: commercial discount discounts_charges[0][percent]: 23.00 discounts_charges[0][tax_code]: NOR discounts_charges[0][amount]: 8.13 // refers to the amount before tax (i.e., this discount is 10.00 EUR after VAT) discount_amount: 8.13 // total header discounts applied (EXCLUDES line-level discounts)   ","version":"Next","tagName":"h3"},{"title":"Line-level discount or charge​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#line-level-discount-or-charge","content":" lines[0][discounts_charges][0][type]: false // use true for charge lines[0][discounts_charges][0][reason]: commercial discount // textual description of the discount lines[0][discounts_charges][0][amount]: 5.00 // refers to the amount before VAT to deduct from the line lines[0][quantity]: 2.000 // quantity of items in the line lines[0][price]: 10.00000000 // unit price of the item lines[0][amount]: 15.00000000 // line total affected by discount ( (10 * 2) - 5 = 15) lines[0][taxes][0][tax_percent]: 23.000 // VAT rate lines[0][taxes][0][tax_amount]: 3.45 // VAT value for the line (15 * 0.23) discount_amount: 0.00 // total header discounts applied (EXCLUDES line-level discounts)   ","version":"Next","tagName":"h3"},{"title":"Item price discount​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#item-price-discount","content":" lines[0][price_discount][base_amount]: 10.00 // original unit price before applying the discount lines[0][price_discount][amount]: 5.00 // refers to the amount before VAT to deduct from the item price lines[0][quantity]: 2.000 // quantity of items in the line lines[0][price]: 5.00000000 // price after discount (10 - 5 = 5) lines[0][amount]: 10.00000000 // line total is affected by discount ( (10 - 5) * 2 = 10) lines[0][taxes][0][tax_percent]: 23.000 // VAT rate lines[0][taxes][0][tax_amount]: 2.30 // VAT value for the linea (10 * 0.23) discount_amount: 0.00 // total header discounts applied (EXCLUDES line-level discounts)   ","version":"Next","tagName":"h3"},{"title":"Withholding tax​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#withholding-tax","content":" withholding_tax[0][type]: IRF withholding_tax[0][tax_amount]: 10.00 // withholding amount withholding_tax[0][description]: IRS withholding withholding_tax_amount: 10.00 // ssum of all withholdings   Note: document totals are not affected by withholding  ","version":"Next","tagName":"h3"},{"title":"VAT exemption on line​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#vat-exemption-on-line","content":" lines[0][quantity]: 2.000 // quantity lines[0][price]: 5.00000000 // unit price lines[0][amount]: 10.00000000 // line total without VAT lines[0][taxes][0][tax_percent]: 0.00 // VAT rate lines[0][taxes][0][tax_amount]: 0.00 // VAT value for the line lines[0][taxes][0][tax_exemption_reason_code]: M08 // AT reason code lines[0][taxes][0][tax_exemption_reason]: VAT - Reverse Charge // description of AT reason   ","version":"Next","tagName":"h3"},{"title":"VAT exemption on header discount or charge​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#vat-exemption-on-header-discount-or-charge","content":" discounts_charges[0][type]: false // use true for charge discounts_charges[0][reason]: commercial discount // textual description discounts_charges[0][percent]: 0.00 // percentage (exempt) discounts_charges[0][tax_code]: ISE // exempt discounts_charges[0][amount]: 10.00 // discount amount discounts_charges[0][tax_exemption_reason]: M08 // AT reason code discounts_charges[0][tax_exemption_reason_code]: VAT - Reverse Charge // description of AT reason   ","version":"Next","tagName":"h3"},{"title":"Sending invoice by email to one or more addresses​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#sending-invoice-by-email-to-one-or-more-addresses","content":" send_by_email: 1, customer[email]: endereco1@email.com // always sent to the email specified in the customer additional_emails[0]: endereco2@email.com // also sent to additional addresses additional_emails[1]: endereco3@email.com   ","version":"Next","tagName":"h3"},{"title":"Sending QR code​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#sending-qr-code","content":" qr_code: A:500000000*B:123456789*C:PT*D:GT*E:N*F:20190720*G:GT G234CB/50987*H:GTVX4Y8B-50987*I1:0*N:0.00*O:0.00*Q:5uIg*R:9999   ","version":"Next","tagName":"h3"},{"title":"Document creation via CIUS-PT submission​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#document-creation-via-cius-pt-submission","content":" Note that the order of XML elements is relevant and affects validations in the UBL format. It is recommended to consult the CIUS-PT semantic data model guide here.  ","version":"Next","tagName":"h2"},{"title":"Commitment number in document header​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#commitment-number-in-document-header-1","content":" &lt;Invoice&gt; ... &lt;cbc:AccountingCost&gt;2021/156&lt;/cbc:AccountingCost&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Supplier share capital​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#supplier-share-capital","content":" &lt;Invoice&gt; ... &lt;cac:AccountingSupplierParty&gt; &lt;cac:PartyLegalEntity&gt; &lt;cbc:CompanyLegalForm&gt;2.000.000 EUR&lt;/cbc:CompanyLegalForm&gt; &lt;/cac:PartyLegalEntity&gt; &lt;/cac:AccountingSupplierParty&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Customer GLN (use schemeID 0088)​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#customer-gln-use-schemeid-0088","content":" &lt;Invoice&gt; ... &lt;cac:AccountingCustomerParty&gt; &lt;cbc:EndpointID schemeID=&quot;0088&quot;&gt;123456789&lt;/cbc:EndpointID&gt; &lt;/cac:AccountingCustomerParty&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"ATCUD and QRCODE​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#atcud-and-qrcode","content":" &lt;Invoice&gt; ... &lt;cac:AdditionalDocumentReference&gt; &lt;cbc:ID schemeID=&quot;ANG&quot;&gt;AFHOFX-22&lt;/cbc:ID&gt; &lt;!-- ATCUD value --&gt; &lt;cbc:DocumentDescription&gt;QR_CODE&lt;/cbc:DocumentDescription&gt; &lt;cac:Attachment&gt; &lt;!-- QRCODE text, base64 encoded (character sequence, not image) --&gt; &lt;cbc:EmbeddedDocumentBinaryObject mimeCode=&quot;text/plain&quot; filename=&quot;QR_CODE.txt&quot;&gt;UVJDT0RF=&lt;/cbc:EmbeddedDocumentBinaryObject&gt; &lt;/cac:Attachment&gt; &lt;/cac:AdditionalDocumentReference&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Payment method​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#payment-method","content":" &lt;Invoice&gt; ... &lt;cac:PaymentMeans&gt; &lt;cbc:PaymentMeansCode&gt;NU&lt;/cbc:PaymentMeansCode&gt; &lt;/cac:PaymentMeans&gt; &lt;/Invoice&gt;   Allowed values:  Code\tDescriptionCC\tCredit card CD\tDebit card CH\tBank cheque CI\tInternational documentary credit CO\tGift cheque or card CS\tAccount balance offset DE\tElectronic cash (e.g., loyalty cards or points) LC\tCommercial paper MB\tATM (Multibanco) payment references NU\tCash OU\tOther unspecified means PR\tGoods barter TB\tBank transfer or authorised direct debit TR\tExtramural compensation titles (e.g., meal, education, etc.)  ","version":"Next","tagName":"h3"},{"title":"Debit or credit card payment information​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#debit-or-credit-card-payment-information","content":" &lt;Invoice&gt; ... &lt;cac:PaymentMeans&gt; &lt;cbc:PaymentMeansCode&gt;CC&lt;/cbc:PaymentMeansCode&gt; &lt;cac:CardAccount&gt; &lt;cbc:PrimaryAccountNumberID&gt;4211456651233545687&lt;/cbc:PrimaryAccountNumberID&gt; &lt;!-- Account number --&gt; &lt;cbc:NetworkID&gt;04256&lt;/cbc:NetworkID&gt; &lt;!-- Bank network ID --&gt; &lt;cbc:HolderName&gt;João Ferreira&lt;/cbc:HolderName&gt; &lt;!-- Cardholder name --&gt; &lt;/cac:CardAccount&gt; &lt;/cac:PaymentMeans&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Bank transfer payment method​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#bank-transfer-payment-method","content":" &lt;Invoice&gt; ... &lt;cac:PaymentMeans&gt; &lt;cbc:PaymentMeansCode&gt;TB&lt;/cbc:PaymentMeansCode&gt; &lt;cac:PayeeFinancialAccount&gt; &lt;cbc:ID&gt;PT50000700230012345667899&lt;/cbc:ID&gt; &lt;!-- IBAN--&gt; &lt;cbc:Name&gt;João&lt;/cbc:Name&gt; &lt;!-- Account holder --&gt; &lt;cac:FinancialInstitutionBranch&gt; &lt;cbc:ID&gt;NBxxxx&lt;/cbc:ID&gt; &lt;!--SWIFT --&gt; &lt;/cac:FinancialInstitutionBranch&gt; &lt;/cac:PayeeFinancialAccount&gt; &lt;/cac:PaymentMeans&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"ATM (Multibanco) reference payment method​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#atm-multibanco-reference-payment-method","content":" &lt;Invoice&gt; ... &lt;cac:PaymentMeans&gt; &lt;cbc:PaymentMeansCode name=&quot;#DESCRIPTION@ATMPAYMENT#156.22#&quot;&gt;#ENTITY@ATMPAYMENT#15652&lt;/cbc:PaymentMeansCode&gt; &lt;!-- Entity and value --&gt; &lt;cbc:PaymentID&gt;#REFERENCE@ATMPAYMENT#156555145#&lt;/cbc:PaymentID&gt; &lt;!-- Reference --&gt; &lt;/cac:PaymentMeans&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Second ATM (Multibanco) reference​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#second-atm-multibanco-reference","content":" &lt;Invoice&gt; ... &lt;cbc:Note&gt;#ENTITY@ATMPAYMENT-001#12345#&lt;/cbc:Note&gt; &lt;!-- 2nd entity --&gt; &lt;cbc:Note&gt;#REFERENCE@ATMPAYMENT-001#012345678#&lt;/cbc:Note&gt; &lt;!-- 2nd reference --&gt; &lt;cbc:Note&gt;#AMOUNT@ATMPAYMENT-001#3264.10#&lt;/cbc:Note&gt; &lt;!--2nd reference amount --&gt; &lt;cbc:Note&gt;#DESCRIPTION@ATMPAYMENT-001#Total invoice amount, including outstanding amounts#&lt;/cbc:Note&gt; &lt;!-- 2nd reference description --&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Payment terms:​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#payment-terms-1","content":" &lt;Invoice&gt; ... &lt;PaymentTerms&gt; &lt;cbc:Note&gt;30 dias&lt;/cbc:Note&gt; &lt;/PaymentTerms&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Textual note in document header​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#textual-note-in-document-header","content":" &lt;Invoice&gt; ... &lt;cbc:Note&gt;Nota cabeçalho&lt;/cbc:Note&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Textual note in document lines​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#textual-note-in-document-lines","content":" &lt;Invoice&gt; ... &lt;InvoiceLine&gt; &lt;cbc:Note&gt;Nota linha&lt;/cbc:Note&gt; &lt;/InvoiceLine&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Additional property in document​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#additional-property-in-document","content":" &lt;Invoice&gt; ... &lt;cbc:Note&gt;#ADDITIONALPROPERTY#VOUCHER#123#&lt;/cbc:Note&gt; &lt;Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Place of consumption (CPE) in document lines​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#place-of-consumption-cpe-in-document-lines-1","content":" &lt;cac:InvoiceLine&gt; ... &lt;cac:AdditionalItemProperty&gt; &lt;cbc:Name&gt;CPE&lt;/cbc:Name&gt; &lt;cbc:Value&gt;PT1234567890&lt;/cbc:Value&gt; &lt;/cac:AdditionalItemProperty&gt; &lt;/cac:InvoiceLine&gt;   ","version":"Next","tagName":"h3"},{"title":"Order / request number​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#order--request-number","content":" &lt;Invoice&gt; ... &lt;cac:OrderReference&gt; &lt;cbc:ID&gt;20159854587&lt;/cbc:ID&gt; &lt;/cac:OrderReference&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Commitment number in document lines​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#commitment-number-in-document-lines-1","content":" &lt;cac:InvoiceLine&gt; &lt;cbc:AccountingCost&gt;2020/123&lt;/cbc:AccountingCost&gt; &lt;!-- line commitment number --&gt; ... &lt;cac:Item&gt; &lt;cac:AdditionalItemProperty&gt; &lt;cbc:Name&gt;#LINEID@COMMITMENTLINEREFERENCE#&lt;/cbc:Name&gt; &lt;cbc:Value&gt;1&lt;/cbc:Value&gt; &lt;!-- line number --&gt; &lt;/cac:AdditionalItemProperty&gt; &lt;/cac:Item&gt; &lt;/cac:InvoiceLine&gt;   ","version":"Next","tagName":"h3"},{"title":"Attached PDF​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#attached-pdf","content":" Note: content must bebase64 encoded  &lt;Invoice&gt; ... &lt;cac:AdditionalDocumentReference&gt; &lt;cbc:ID&gt;1&lt;/cbc:ID&gt; &lt;cbc:DocumentDescription&gt;INVOICE_REPRESENTATION&lt;/cbc:DocumentDescription&gt; &lt;cac:Attachment&gt; &lt;cbc:EmbeddedDocumentBinaryObject mimeCode=&quot;application/pdf&quot; filename=&quot;document&quot;&gt;JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGIvTGF== &lt;/cbc:EmbeddedDocumentBinaryObject&gt; &lt;/cac:Attachment&gt; &lt;/cac:AdditionalDocumentReference&gt; &lt;/Invoice&gt;   See example  ","version":"Next","tagName":"h3"},{"title":"Multiple attached PDFs​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#multiple-attached-pdfs","content":" &lt;Invoice&gt; ... &lt;cac:AdditionalDocumentReference&gt; &lt;cbc:ID&gt;1&lt;/cbc:ID&gt; &lt;!-- Main attachment must have description INVOICE_REPRESENTATION', or 'CREDITNOTE_REPRESENTATION' --&gt; &lt;cbc:DocumentDescription&gt;INVOICE_REPRESENTATION&lt;/cbc:DocumentDescription&gt; &lt;cac:Attachment&gt; &lt;cbc:EmbeddedDocumentBinaryObject mimeCode=&quot;application/pdf&quot; filename=&quot;document.pdf&quot;&gt;JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGIvTGF== &lt;/cbc:EmbeddedDocumentBinaryObject&gt; &lt;/cac:Attachment&gt; &lt;/cac:AdditionalDocumentReference&gt; &lt;cac:AdditionalDocumentReference&gt; &lt;cbc:ID&gt;2&lt;/cbc:ID&gt; &lt;!-- Secondary attachments (e.g., order notes, payment slips, etc.) should have description 'ATTACHMENT'. Multiple ATTACHMENTs can be included in a document. --&gt; &lt;cbc:DocumentDescription&gt;ATTACHMENT&lt;/cbc:DocumentDescription&gt; &lt;cac:Attachment&gt; &lt;cbc:EmbeddedDocumentBinaryObject mimeCode=&quot;application/pdf&quot; filename=&quot;document2.pdf&quot;&gt;jUNCiW1tbW1DQoJVBERi0xLjUNCiW1tbW1DQo8PC9UeXBlL0NhUGIvTGF== &lt;/cbc:EmbeddedDocumentBinaryObject&gt; &lt;/cac:Attachment&gt; &lt;/cac:AdditionalDocumentReference&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Other attachments (QR Code, etc.)​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#other-attachments-qr-code-etc","content":" Note: content must be base64 encoded  &lt;Invoice&gt; ... &lt;cac:AdditionalDocumentReference&gt; &lt;cbc:ID&gt;2&lt;/cbc:ID&gt; &lt;cbc:DocumentDescription&gt;ATTACHMENT&lt;/cbc:DocumentDescription&gt; &lt;!-- use QR_CODE for QR Code --&gt; &lt;cac:Attachment&gt; &lt;cbc:EmbeddedDocumentBinaryObject mimeCode=&quot;application/txt&quot; filename=&quot;document&quot;&gt;JVBERi0xLjUNCiW1tbW1DQoxIDAgb2JqDQo8PC9UeXBlL0NhdGFsb2cvUGIvTGF== &lt;/cbc:EmbeddedDocumentBinaryObject&gt; &lt;/cac:Attachment&gt; &lt;/cac:AdditionalDocumentReference&gt; &lt;/Invoice&gt;   ","version":"Next","tagName":"h3"},{"title":"Header document discount or charge​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#header-document-discount-or-charge","content":" See example  ","version":"Next","tagName":"h3"},{"title":"Line document discount or charge​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#line-document-discount-or-charge","content":" See example  ","version":"Next","tagName":"h3"},{"title":"Item price discount or charge​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#item-price-discount-or-charge","content":" See example  ","version":"Next","tagName":"h3"},{"title":"Withholding tax​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#withholding-tax-1","content":" See example  ","version":"Next","tagName":"h3"},{"title":"VAT exemption in document line​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#vat-exemption-in-document-line","content":" See example  ","version":"Next","tagName":"h3"},{"title":"VAT exemption in document header discount​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#vat-exemption-in-document-header-discount","content":" See example  ","version":"Next","tagName":"h3"},{"title":"Multiple exemptions in document​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#multiple-exemptions-in-document","content":" See example  ","version":"Next","tagName":"h3"},{"title":"Multiple discounts in line​","type":1,"pageTitle":"Use Cases","url":"/en/docs/integrations/api/usecases#multiple-discounts-in-line","content":" See example  Consult the complet list of CIUS-PT use cases pela eSPap. ","version":"Next","tagName":"h3"}],"options":{"id":"default"}}